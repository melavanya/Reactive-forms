{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/app.service.ts","webpack:///src/app/appData.ts","webpack:///src/app/creation/creation.component.ts","webpack:///src/app/creation/creation.component.html","webpack:///src/app/tracking/tracking.component.ts","webpack:///src/app/tracking/tracking.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","schemas","AppService","loopbackData","loopbackDetails","Object","assign","counter","index","findIndex","gpn","SNRequired","push","message","forEach","element","console","log","providedIn","GPNData","maxCount","quantity","serialNumbers","serialNumber","CreationComponent","formBuilder","appService","searchText","SNumberInputs","showLoopbacks","initialSNumbers","initForm","getGPNData","subscribe","result","results","creationForm","group","required","array","option","alert1","nativeElement","classList","add","alert2","GPN","getLoopbackData","find","length","remove","generateSerialNumberInputs","value","filterValue","toLowerCase","filter","item","includes","get","clear","formValues","request","saveLoopbackData","res","reset","controls","removeAt","closeAlert","onFormSubmit","cancelLoopbacks","TrackingComponent","visible","insertionForm","savelotCount","formReset","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { TrackingComponent } from './tracking/tracking.component';\nimport { CreationComponent } from './creation/creation.component';\n\n\nconst routes: Routes = [\n  {path:'', component: TrackingComponent},\n  {path: 'tracking', component: TrackingComponent },\n  {path: 'create', component: CreationComponent},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'cmms-insertion';\n}\n","\n<!--Navbar-->\n<mdb-navbar SideClass=\"navbar navbar-expand-lg navbar-dark cyan\"  [containerInside]=\"false\">\n\n  <!-- Navbar brand -->\n  <mdb-navbar-brand><a routerLink=\"\" class=\"navbar-brand\">Loopback Tracking System</a></mdb-navbar-brand>\n\n   <!-- Collapsible content -->\n   <links>\n\n    <!-- Links -->\n    <ul class=\"navbar-nav mr-auto\">\n        <li class=\"nav-item\">\n          <a routerLink=\"tracking\" class=\"nav-link waves-light\" mdbWavesEffect><mdb-icon fas icon=\"info\"></mdb-icon>Tracking</a>\n        <li class=\"nav-item\">\n          <a  routerLink=\"create\" class=\"nav-link waves-light\" mdbWavesEffect><mdb-icon far icon=\"plus-square\"></mdb-icon>Creation<span class=\"sr-only\">(current)</span></a>\n      </li>\n\n    </ul>\n    <!-- Links -->\n\n\n</links>\n<!-- Collapsible content -->\n</mdb-navbar>\n<!--/.Navbar-->\n\n<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { MDBBootstrapModule, ButtonsModule } from 'angular-bootstrap-md';\nimport { AutoCompleterModule, InputsModule } from 'ng-uikit-pro-standard'\n\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CreationComponent } from './creation/creation.component';\nimport { TrackingComponent } from './tracking/tracking.component';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CreationComponent,\n    TrackingComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    InputsModule,\n    AutoCompleterModule,\n    ButtonsModule,\n    MDBBootstrapModule.forRoot()\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { GPNData, loopbackData, } from './appData';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppService {\n  loopbackData: any = [];\n  constructor() {\n    this.loopbackData = loopbackData;\n  }\n\n  getGPNData(): Observable<[]> {\n    return of(GPNData);\n  }\n\n  saveLoopbackData(loopbackDetails): Observable<any> {\n    loopbackDetails = Object.assign({}, loopbackDetails, { counter: 0 })\n    let index = this.loopbackData.findIndex((gpn) => (loopbackDetails.gpn == gpn.gpn && gpn.SNRequired == 'yes'))\n    if (index !== -1 && loopbackDetails.SNRequired == 'yes') {\n      this.loopbackData[index] = loopbackDetails;\n    } else {\n      this.loopbackData.push(loopbackDetails);\n   }\n    return of({message: \"Success\"});\n  }\n\n  getLoopbackData(): Observable<[]> {\n    return of(this.loopbackData);\n  }\n\n  savelotCount(gpn) {\nthis.loopbackData.forEach(element => {\n  if (element.gpn == gpn) {\n    element.counter = element.counter+1;\n  }\n});\n    console.log(this.loopbackData)\n  }\n\n}\n","export const GPNData: any = [\r\n  '07000400',\r\n  '1093166',\r\n  '42000604-02',\r\n  '86016769',\r\n  '86016887',\r\n  '86017549',\r\n  '86002262'\r\n];\r\n\r\nexport const loopbackData = [{\r\n  maxCount: 10,\r\n  counter: 0,\r\n  gpn: \"07000400\",\r\n  quantity: 5,\r\n  SNRequired: 'yes',\r\n  serialNumbers: [\r\n    { serialNumber: \"1\" },\r\n    { serialNumber: \"2\" },\r\n    { serialNumber: \"3\" },\r\n  ]\r\n},\r\n{\r\n  maxCount: 5,\r\n  counter: 3,\r\n  gpn: '1093166',\r\n  quantity: 3,\r\n  SNRequired: 'yes',\r\n  serialNumbers: [\r\n    { serialNumber: \"1\" },\r\n    { serialNumber: \"2\" },\r\n    { serialNumber: \"3\" },\r\n  ]\r\n  },\r\n  {\r\n    maxCount: 5,\r\n    counter: 5,\r\n    gpn: '86002262',\r\n    quantity: 3,\r\n    SNRequired: 'yes',\r\n    serialNumbers: [\r\n      { serialNumber: \"1\" },\r\n      { serialNumber: \"2\" },\r\n      { serialNumber: \"3\" },\r\n    ]\r\n  }];\r\n","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { FormGroup, Validators, FormBuilder, FormArray } from '@angular/forms';\nimport { AppService } from '../app.service';\n\n@Component({\n  selector: 'app-creation',\n  templateUrl: './creation.component.html',\n  styleUrls: ['./creation.component.scss']\n})\nexport class CreationComponent implements OnInit {\n  @ViewChild('alert1', { static: true }) alert1: ElementRef;\n  @ViewChild('alert2', { static: true }) alert2: ElementRef;\n\n  searchText = '';\n  GPNData = [];\n  results: any[];\n  SNumberInputs = 0;\n  showLoopbacks = false;\n  serialNumber: FormArray;\n  initialSNumbers = 0;\n\n  creationForm: FormGroup;\n  constructor(private formBuilder: FormBuilder, public appService: AppService) {\n  }\n\n  ngOnInit(): void {\n    this.initForm();\n    this.appService.getGPNData().subscribe(result => {\n      this.results = result;\n      this.GPNData = result;\n    });\n  }\n  initForm() {\n    this.creationForm = this.formBuilder.group({\n      gpn: ['', Validators.required],\n      quantity: ['', Validators.required],\n      maxCount: [null],\n      SNRequired: ['', Validators.required],\n      serialNumbers: this.formBuilder.array([])\n    });\n  }\n  checkGPN(option) {\n    this.alert1.nativeElement.classList.add('hide');\n    this.alert2.nativeElement.classList.add('hide');\n    let GPN = option;\n\n    this.appService.getLoopbackData().subscribe(results => {\n      let gpn: any = results.find((gpn: any) => (gpn.gpn == GPN && gpn.SNRequired == 'yes'));\n      if (gpn) {\n        if (gpn.serialNumbers.length !== gpn.quantity) {\n          this.creationForm = this.formBuilder.group({\n            gpn: [gpn.gpn, Validators.required],\n            quantity: [gpn.quantity, Validators.required],\n            maxCount: [gpn.maxCount],\n            SNRequired: [gpn.SNRequired, Validators.required],\n            serialNumbers: this.formBuilder.array(gpn.serialNumbers)\n          });\n          this.showLoopbacks = true;\n          this.initialSNumbers = gpn.serialNumbers.length;\n          this.alert2.nativeElement.classList.remove('hide');\n          this.SNumberInputs = gpn.quantity - gpn.serialNumbers.length;\n          this.generateSerialNumberInputs();\n        }\n      } else {\n        this.creationForm = this.formBuilder.group({\n          gpn: [GPN, Validators.required],\n          quantity: ['', Validators.required],\n          maxCount: [null],\n          SNRequired: ['', Validators.required],\n          serialNumbers: this.formBuilder.array([])\n        });\n        this.showLoopbacks = false;\n        this.initialSNumbers = 0;\n        this.alert1.nativeElement.classList.add('hide');\n        this.alert2.nativeElement.classList.add('hide');\n      }\n    })\n  }\n  filter(value) {\n    if (value !== null) {\n      const filterValue = value.toLowerCase();\n      this.results = this.GPNData.filter((item: string) => item.toLowerCase().includes(filterValue));\n    }\n  }\n\n  closeAlert(value) {\n    if (value == \"alert1\") {\n      this.alert1.nativeElement.classList.add('hide')\n    } else {\n      this.alert2.nativeElement.classList.add('hide')\n    }\n  }\n  cancelLoopbacks() {\n    this.showLoopbacks = false;\n    this.serialNumber = this.creationForm.get('serialNumbers') as FormArray;\n    this.serialNumber.clear();\n  }\n\n  onFormSubmit() {\n    let formValues = this.creationForm.value;\n    if (formValues.SNRequired == 'no') {\n      let request = {\n        gpn: formValues.gpn,\n        quantity: formValues.quantity,\n        maxCount: 0,\n        SNRequired: formValues.SNRequired,\n        serialNumbers: []\n      };\n      this.appService.saveLoopbackData(request).subscribe(res => {\n        this.showLoopbacks = false;\n        this.alert1.nativeElement.classList.remove('hide')\n        this.creationForm.reset();\n      })\n    } else {\n      this.showLoopbacks = true;\n      this.SNumberInputs = formValues.quantity;\n      this.generateSerialNumberInputs();\n    }\n  }\n  previousInput() {\n    this.serialNumber = this.creationForm.get('serialNumbers') as FormArray;\n    if (this.serialNumber.controls.length > 1) {\n      this.serialNumber.removeAt(this.serialNumber.length - 1);\n      this.SNumberInputs++;\n    }\n  }\n  formReset() {\n    this.creationForm.reset();\n  }\n  generateSerialNumberInputs() {\n    this.serialNumber = this.creationForm.get('serialNumbers') as FormArray;\n    if (this.SNumberInputs >= 1)\n      this.serialNumber.push(this.formBuilder.group({\n        serialNumber: ['', Validators.required]\n      }));\n    this.SNumberInputs--;\n  }\n\n  saveLoopbacks() {\n    let formValues = this.creationForm.value;\n    let request = {\n      gpn: formValues.gpn,\n      quantity: formValues.quantity,\n      maxCount: formValues.maxCount,\n      SNRequired: formValues.SNRequired,\n      serialNumbers: formValues.serialNumbers\n    };\n    this.appService.saveLoopbackData(request).subscribe(res => {\n      this.showLoopbacks = false;\n      this.alert1.nativeElement.classList.remove('hide');\n      this.creationForm.reset();\n      this.serialNumber.clear();\n    });\n  }\n}\n","<div class=\"jumbotron text-center\">\n  <div #alert1 class=\"alert alert-success alert-dismissible fade show hide\" role=\"alert\">\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"closeAlert('alert1')\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    <strong #message id=\"message\">Loopback Lot created.</strong>\n  </div>\n  <div #alert2 class=\"alert alert-warning alert-dismissible fade show hide\" role=\"alert\">\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"closeAlert('alert2')\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    <strong #message id=\"message\">This Lot has a Pending scan process. Please continue scanning.</strong>\n  </div>\n  <h3>Loopback Lot Creation Process</h3>\n\n  <form [formGroup]=\"creationForm\" (ngSubmit)=\"onFormSubmit()\">\n    <div class=\"row\">\n      <div class=\"col\">\n        <div class=\"md-form mt-0\">\n          <input type=\"text\" class=\"completer-input form-control mdb-autocomplete\" formControlName=\"gpn\"\n              (ngModelChange)=\"filter($event)\" [mdbAutoCompleter]=\"auto\" placeholder=\"Lot Number\">\n\n            <mdb-auto-completer #auto=\"mdbAutoCompleter\" textNoResults=\"No results found.\">\n              <mdb-option *ngFor=\"let option of results\" [value]=\"option\" (click)=\"checkGPN(option)\">\n                {{ option }}\n              </mdb-option>\n            </mdb-auto-completer>\n        </div>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col\">\n        <div class=\"md-form mt-0\">\n          <input mdbInput type=\"number\" class=\"form-control\" formControlName=\"quantity\">\n          <label>Quantity:</label>\n        </div>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col serialNumber\">\n        <div class=\"md-form mt-0\">\n          <input mdbInput type=\"number\" class=\"form-control\" formControlName=\"maxCount\">\n          <label>Insertion Count:</label>\n        </div>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col\">\n          <div class=\"col-sm-10 radio-grp\">\n            <label class=\"col-sm-2 col-form-label\">Serial Number Required ?</label>\n            <div class=\"custom-control custom-radio custom-control-inline\">\n              <input type=\"radio\" class=\"custom-control-input\" id=\"yes\" value=\"yes\" name=\"SNRequired\" mdbInput formControlName=\"SNRequired\">\n              <label class=\"custom-control-label\" for=\"yes\">Yes</label>\n            </div>\n\n            <div class=\"custom-control custom-radio custom-control-inline\">\n              <input type=\"radio\" class=\"custom-control-input\" id=\"no\" value=\"no\" name=\"SNRequired\" mdbInput formControlName=\"SNRequired\" (ngModelChange)=\"cancelLoopbacks()\">\n              <label class=\"custom-control-label\" for=\"no\">No</label>\n            </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col\">\n        <div class=\"md-form mt-0\">\n          <button *ngIf=\"!showLoopbacks\" type=\"submit\" mdbBtn color=\"default\" [disabled]=\"!creationForm.valid\">Create</button>\n          <button *ngIf=\"!showLoopbacks\" type=\"button\" mdbBtn color=\"danger\" (click)=\"formReset()\">Reset</button>\n        </div>\n      </div>\n    </div>\n    <div *ngIf=\"showLoopbacks\">\n\n      <div class=\"row\">\n        <div *ngIf=\"serialNumber !== undefined\" class=\"serialNumber\">\n        <div *ngFor=\"let serialNumberGroup of serialNumber.controls; let i = index;\"\n        [formGroup]=\"serialNumberGroup\">\n        <div class=\"col\" *ngIf=\"i+1==serialNumber.controls.length\">\n          <div class=\"md-form mt-0\">\n            <input mdbInput type=\"text\" class=\"form-control\" formControlName=\"serialNumber\">\n            <label>Scan Loopback: {{i+1}}</label>\n            <mdb-error *ngIf=\"serialNumber.status !=='VALID'\">Required</mdb-error>\n          </div>\n        </div>\n      </div>\n      </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col\">\n          <div class=\"md-form mt-0\">\n            <button *ngIf=\"(serialNumber.controls.length > initialSNumbers+1)\" type=\"button\" mdbBtn color=\"primary\" (click)=\"previousInput()\">Previous</button>\n            <button *ngIf=\"SNumberInputs !== 0\"type=\"button\" mdbBtn color=\"default\" (click)=\"generateSerialNumberInputs()\" [disabled]=\"serialNumber.status !== 'VALID'\">Next</button>\n            <button *ngIf=\"SNumberInputs !== 0\" type=\"button\" mdbBtn color=\"dark-green\" (click)=\"saveLoopbacks()\" [disabled]=\"serialNumber.status !== 'VALID'\">Save</button>\n            <button *ngIf=\"SNumberInputs == 0\" type=\"submit\" mdbBtn color=\"dark-green\" (click)=\"saveLoopbacks()\" [disabled]=\"serialNumber.status !== 'VALID'\">Submit</button>\n            <button  type=\"button\" mdbBtn color=\"danger\" (click)=\"cancelLoopbacks()\">Cancel Scan</button>\n          </div>\n        </div>\n\n      </div>\n  </div>\n  </form>\n</div>\n\n","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { FormGroup, Validators, FormBuilder, FormArray } from '@angular/forms';\nimport { AppService } from '../app.service';\n\n@Component({\n  selector: 'app-tracking',\n  templateUrl: './tracking.component.html',\n  styleUrls: ['./tracking.component.scss']\n})\nexport class TrackingComponent implements OnInit {\n  @ViewChild('alert1', { static: true }) alert1: ElementRef;\n\n  searchText = '';\n  GPNData = [];\n  results: any[] = [];\n  serialNumber: FormArray;\n  insertionForm: FormGroup;\n  gpn: any;\n  visible = false;\n\n  constructor(private formBuilder: FormBuilder, public appService: AppService) { }\n\n  ngOnInit(): void {\n    this.initForm();\n    this.appService.getLoopbackData().subscribe(result => {\n      result.forEach((gpn: any) => {\n        if (gpn.serialNumbers.length == gpn.quantity) {\n          this.results.push(gpn.gpn);\n          this.GPNData.push(gpn.gpn);\n        }\n      })\n    });\n  }\n  initForm() {\n    this.insertionForm = this.formBuilder.group({\n      gpn: ['', Validators.required]\n    });\n  }\n  formReset() {\n    this.insertionForm.reset();\n    this.visible = false;\n  }\n  checkGPN(option) {\n    this.alert1.nativeElement.classList.add('hide');\n    let GPN = option;\n    this.appService.getLoopbackData().subscribe(results => {\n      let gpn = results.find((gpn: any) => (gpn.gpn == GPN))\n      if (gpn) {\n        this.gpn = gpn;\n      }\n    })\n  }\n  closeAlert(value) {\n    if (value == \"alert1\") {\n      this.alert1.nativeElement.classList.add('hide')\n    }\n  }\n  filter(value) {\n    if (value !== null) {\n      const filterValue = value.toLowerCase();\n      this.results = this.GPNData.filter((item: string) => item.toLowerCase().includes(filterValue));\n    }\n  }\n  onFormSubmit() {\n    if (this.gpn.counter == this.gpn.maxCount) {\n    this.alert1.nativeElement.classList.remove('hide');\n    } else {\n      this.visible = true;\n      this.appService.savelotCount(this.gpn.gpn)\n    }\n\n  }\n}\n","<div class=\"jumbotron text-center\">\n  <div #alert1 class=\"alert alert-danger alert-dismissible fade show hide\" role=\"alert\">\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"closeAlert('alert1')\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    <strong #message id=\"message\">Reached Max count.Please get another lot. </strong>\n  </div>\n  <h3>Loopback Tracking Process</h3>\n\n  <form [formGroup]=\"insertionForm\" (ngSubmit)=\"onFormSubmit()\">\n    <div class=\"row\">\n      <div class=\"col\">\n        <div class=\"md-form mt-0\">\n          <input type=\"text\" class=\"completer-input form-control mdb-autocomplete\" formControlName=\"gpn\"\n              (ngModelChange)=\"filter($event)\" [mdbAutoCompleter]=\"auto\" placeholder=\"Lot Number\">\n\n            <mdb-auto-completer #auto=\"mdbAutoCompleter\" textNoResults=\"No results found.\">\n              <mdb-option *ngFor=\"let option of results\" [value]=\"option\" (click)=\"checkGPN(option)\">\n                {{ option }}\n              </mdb-option>\n            </mdb-auto-completer>\n        </div>\n      </div>\n    </div>\n    <div *ngIf=\"visible\">\n    <div class=\"row\">\n      <div class=\"col serialNumber\">\n        <div class=\"md-form mt-0\">\n          <input mdbInput type=\"number\" class=\"form-control\" disabled value=\"999999\">\n          <label>Badge ID:</label>\n        </div>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col serialNumber\">\n        <div class=\"md-form mt-0\">\n          <input mdbInput type=\"text\" class=\"form-control\" disabled value=\"MIMAssetTag\">\n          <label>asset tag:</label>\n        </div>\n      </div>\n    </div>\n    <div #alert2 class=\"alert alert-primary alert-dismissible fade show\" [ngClass]=\"{'alert-warning': (gpn.maxCount - gpn.counter <= 1)}\" role=\"alert\">\n     <strong #message id=\"message\">Current Lot Count: {{gpn.counter}}. Max Count is: {{gpn.maxCount}}</strong>\n     <p>Please proceed to clean and install Loopbacks.</p>\n    </div>\n  </div>\n\n    <div class=\"row\">\n      <div class=\"col\">\n        <div class=\"md-form mt-0\">\n          <button *ngIf=\"!visible\" type=\"submit\" mdbBtn color=\"default\" [disabled]=\"!insertionForm.valid\">Check</button>\n          <button  type=\"button\" mdbBtn color=\"danger\" (click)=\"formReset()\">Reset</button>\n        </div>\n      </div>\n    </div>\n    </form>\n    </div>\n\n\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}